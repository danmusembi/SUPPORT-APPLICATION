{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\"; // Get user from local storage\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n}; // Register new user\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Login new user\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // logout user\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","login","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/Lenovo/support-desk/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport authService from \"./authService\";\r\n\r\n// Get user from local storage\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'))\r\nconst initialState = {\r\n    user: user ? user : null,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: ''\r\n\r\n}\r\n// Register new user\r\nexport const register = createAsyncThunk('auth/register', \r\nasync(user, thunkAPI) =>{\r\n   try {\r\n    return await authService.register(user)\r\n   } catch (error) {\r\n    const message = \r\n    (error.response &&\r\n         error.response.data && \r\n         error.response.data.message) ||\r\n         error.message ||\r\n         error.toString()\r\n\r\n         return thunkAPI.rejectWithValue(message)\r\n   }\r\n}\r\n ) \r\n\r\n // Login new user\r\n export const login = createAsyncThunk('auth/login', \r\nasync(user, thunkAPI) =>{\r\n    try {\r\n        return await authService.login(user)\r\n       } catch (error) {\r\n        const message = \r\n        (error.response &&\r\n             error.response.data && \r\n             error.response.data.message) ||\r\n             error.message ||\r\n             error.toString()\r\n    \r\n             return thunkAPI.rejectWithValue(message)\r\n       }\r\n}) \r\n\r\n// logout user\r\nexport const logout = createAsyncThunk('auth/logout', async() => {\r\n    await authService.logout()\r\n\r\n})\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) =>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = false\r\n            state.message = ''\r\n        }\r\n    },\r\n    extraReducers: (builder) =>{\r\n        builder\r\n        .addCase(register.pending,(state) => {\r\n            state.isLoading = true\r\n\r\n        })\r\n        .addCase(register.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            state.isSuccess = true\r\n            state.user = action.payload\r\n        })\r\n        .addCase(register.rejected, (state, action) => {\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.message = action.payload\r\n         \r\n            state.user = null\r\n        })\r\n        .addCase(login.pending,(state) => {\r\n            state.isLoading = true\r\n\r\n        })\r\n        .addCase(login.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            state.isSuccess = true\r\n            state.user = action.payload\r\n        })\r\n        .addCase(login.rejected, (state, action) => {\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.message = action.payload\r\n         \r\n            state.user = null\r\n        })\r\n        .addCase(logout.fulfilled, (state) => {\r\n            state.user = null\r\n        })\r\n\r\n\r\n    }\r\n})\r\nexport const {reset} = authSlice.actions\r\nexport default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}