{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const useAuthStatus = () => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkingStatus, setCheckingStatus] = useState(true);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (user) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n\n    setCheckingStatus(false);\n  }, [user]);\n  return {\n    loggedIn,\n    checkingStatus\n  };\n};\n\n_s(useAuthStatus, \"PfvY4cu9Gi6xRo+mVxHDm/wyICo=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useState","useEffect","useSelector","useAuthStatus","loggedIn","setLoggedIn","checkingStatus","setCheckingStatus","user","state","auth"],"sources":["C:/Users/Lenovo/support-desk/frontend/src/hooks/useAuthStatus.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nexport const useAuthStatus = () => {\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n    const [checkingStatus, setCheckingStatus] = useState(true)\r\n    const {user} = useSelector((state) => state.auth)\r\n    useEffect(() =>{\r\n        if(user){\r\n            setLoggedIn(true)\r\n        } else {\r\n            setLoggedIn(false)\r\n        }\r\n        setCheckingStatus(false)\r\n    }, [user])\r\n\r\n    return {loggedIn, checkingStatus}\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM;IAACQ;EAAD,IAASN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;EACAT,SAAS,CAAC,MAAK;IACX,IAAGO,IAAH,EAAQ;MACJH,WAAW,CAAC,IAAD,CAAX;IACH,CAFD,MAEO;MACHA,WAAW,CAAC,KAAD,CAAX;IACH;;IACDE,iBAAiB,CAAC,KAAD,CAAjB;EACH,CAPQ,EAON,CAACC,IAAD,CAPM,CAAT;EASA,OAAO;IAACJ,QAAD;IAAWE;EAAX,CAAP;AACH,CAdM;;GAAMH,a;UAGMD,W"},"metadata":{},"sourceType":"module"}